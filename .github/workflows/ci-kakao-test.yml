name: CI - KakaoTalk Notification Test

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch: # 수동 실행 가능

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1) 저장소 체크아웃
      - name: Checkout code
        uses: actions/checkout@v5

      # 2) Node.js 환경 세팅
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # 3) Firebase Emulator 설치
      - name: Install Firebase Emulator
        run: |
          npm install -g firebase-tools
          firebase setup:emulators:firestore

      # 4) 의존성 설치
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 5) Firestore Emulator 실행 (백그라운드)
      - name: Start Firestore Emulator
        run: |
          nohup firebase emulators:start --only firestore --project demo-test --import=./firestore-data --export-on-exit &

      # 6) 테스트 실행 (Reset → Seed → Cypress)
      - name: Run Academy Tests
        run: npm run test:academy

      # 7) 카카오톡 성공 알림 테스트
      - name: Notify Kakao Success Test
        if: always()
        run: |
          curl -X POST https://your-n8n-instance.com/webhook/ci-kakao-alert \
          -H "Content-Type: application/json" \
          -d '{
            "status": "success",
            "repo": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "author": "${{ github.actor }}"
          }'

      # 8) 카카오톡 실패 알림 테스트
      - name: Notify Kakao Failure Test
        if: always()
        run: |
          curl -X POST https://your-n8n-instance.com/webhook/ci-kakao-alert \
          -H "Content-Type: application/json" \
          -d '{
            "status": "failure",
            "repo": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "author": "${{ github.actor }}"
          }'

      # 9) 실제 CI 결과 알림
      - name: Notify Kakao Real CI Result
        if: always()
        run: |
          curl -X POST https://your-n8n-instance.com/webhook/ci-kakao-alert \
          -H "Content-Type: application/json" \
          -d '{
            "status": "${{ job.status }}",
            "repo": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "author": "${{ github.actor }}"
          }'
