// Secure-by-default (deny all → 최소 허용)
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isAdmin()    { return isSignedIn() && request.auth.token.admin == true; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }

    // 공개 읽기 전용 예시(원하면 삭제)
    match /public/{doc} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // 사용자 프로필: 본인만 읽기/쓰기, 관리자도 허용
    match /users/{uid} {
      allow read, write: if isOwner(uid) || isAdmin();
      // 필드 밸리데이션(원하면 세부 조정)
      allow create: if request.resource.data.keys().hasOnly(['displayName','photoURL','createdAt','updatedAt'])
                    && request.resource.data.createdAt is timestamp
                    && request.resource.data.updatedAt is timestamp;
      allow update: if request.resource.data.diff(resource.data).changedKeys()
                      .hasOnly(['displayName','photoURL','updatedAt'])
                    && request.resource.data.updatedAt is timestamp;
    }

    // 소유권 기반 문서(예: posts/{postId})
    match /posts/{postId} {
      allow read: if true; // 공개 읽기 원치 않으면 isSignedIn() 로 바꿔
      allow create: if isSignedIn()
                     && request.resource.data.ownerId == request.auth.uid
                     && request.resource.data.createdAt is timestamp
                     && request.resource.data.keys().hasAll(['ownerId','title','createdAt']);
      allow update: if isSignedIn()
                     && resource.data.ownerId == request.auth.uid
                     && request.resource.data.ownerId == resource.data.ownerId // 소유자 바꾸기 금지
                     && request.resource.data.diff(resource.data).changedKeys()
                          .hasOnly(['title','content','updatedAt'])
                     && request.resource.data.updatedAt is timestamp;
      allow delete: if isOwner(resource.data.ownerId) || isAdmin();
    }

    // 기본: 전부 거부
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
