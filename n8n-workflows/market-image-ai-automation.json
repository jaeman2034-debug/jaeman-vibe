{
  "name": "?? 留덉폆 ?대?吏 AI 遺꾩꽍 ?먮룞??,
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "market-image-analyze",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "?뱿 Webhook - Image Upload",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "functionCode": "// ?뵇 ?낅젰 ?곗씠??寃利?諛?濡쒓퉭\nconst input = $input.all()[0].json;\n\nconsole.log('?벂 ?섏떊???곗씠??', input);\n\n// ?꾩닔 ?꾨뱶 寃利?nif (!input.fileUrl || !input.filename) {\n  throw new Error('fileUrl ?먮뒗 filename???꾨씫?섏뿀?듬땲??);\n}\n\n// OpenAI Vision API ?몄텧 以鍮?nconst analysisPayload = {\n  event: input.event,\n  fileUrl: input.fileUrl,\n  filename: input.filename,\n  contentType: input.contentType,\n  size: input.size,\n  timestamp: input.timestamp,\n  // AI 遺꾩꽍 ?붿껌 ?뚮옒洹?n  needsAnalysis: true\n};\n\nreturn analysisPayload;"
      },
      "name": "?㎥ ?곗씠??寃利?,
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "functionCode": "// ?쨼 OpenAI Vision API ?몄텧 (GPT-4 Vision)\nconst input = $input.all()[0].json;\nconst apiKey = $env.OPENAI_API_KEY;\n\nif (!apiKey) {\n  console.warn('?좑툘 OPENAI_API_KEY媛 ?ㅼ젙?섏? ?딆쓬 - AI 遺꾩꽍 嫄대꼫?');\n  return {\n    ...input,\n    aiAnalysis: {\n      skipped: true,\n      reason: 'API ??誘몄꽕??\n    }\n  };\n}\n\ntry {\n  const response = await fetch('https://api.openai.com/v1/chat/completions', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${apiKey}`\n    },\n    body: JSON.stringify({\n      model: 'gpt-4o-mini',\n      messages: [\n        {\n          role: 'system',\n          content: '?덈뒗 ?ㅽ룷痢??⑺뭹 ?대?吏 遺꾩꽍 ?꾨Ц媛?? ?대?吏瑜?蹂닿퀬 ?곹뭹??移댄뀒怨좊━, ?곹깭, 釉뚮옖?? 異붿쿇 媛寃⑹쓣 JSON?쇰줈 諛섑솚?댁쨾.'\n        },\n        {\n          role: 'user',\n          content: [\n            {\n              type: 'text',\n              text: '???곹뭹 ?대?吏瑜?遺꾩꽍?댁꽌 JSON ?뺥깭濡??뚮젮以? { category, brand, condition, tags[], suggestedPrice }'\n            },\n            {\n              type: 'image_url',\n              image_url: {\n                url: input.fileUrl\n              }\n            }\n          ]\n        }\n      ],\n      max_tokens: 500\n    })\n  });\n\n  const result = await response.json();\n  const aiText = result.choices[0].message.content;\n  \n  // JSON ?뚯떛 ?쒕룄\n  let aiData = {};\n  try {\n    const jsonMatch = aiText.match(/\\{[\\s\\S]*\\}/);\n    if (jsonMatch) {\n      aiData = JSON.parse(jsonMatch[0]);\n    }\n  } catch (parseError) {\n    console.warn('JSON ?뚯떛 ?ㅽ뙣, ?먮낯 ?띿뒪???ъ슜');\n    aiData = { rawText: aiText };\n  }\n\n  return {\n    ...input,\n    aiAnalysis: {\n      success: true,\n      category: aiData.category || '湲고?',\n      brand: aiData.brand || '?????놁쓬',\n      condition: aiData.condition || '以묎퀬',\n      tags: aiData.tags || [],\n      suggestedPrice: aiData.suggestedPrice || 0,\n      rawText: aiText,\n      analyzedAt: new Date().toISOString()\n    }\n  };\n} catch (error) {\n  console.error('AI 遺꾩꽍 ?ㅻ쪟:', error);\n  return {\n    ...input,\n    aiAnalysis: {\n      success: false,\n      error: error.message\n    }\n  };\n}"
      },
      "name": "?쨼 AI Vision 遺꾩꽍",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "content": "?뤇截?**??留덉폆 ?대?吏 ?낅줈?쒕맖!**\n\n?뱚 **?뚯씪紐?** `{{$json.filename}}`\n?뵕 **URL:** {{$json.fileUrl}}\n?벀 **?ш린:** {{$json.size}} bytes\n\n?쨼 **AI 遺꾩꽍 寃곌낵:**\n??移댄뀒怨좊━: {{$json.aiAnalysis.category}}\n??釉뚮옖?? {{$json.aiAnalysis.brand}}\n???곹깭: {{$json.aiAnalysis.condition}}\n??異붿쿇 媛寃? ??{$json.aiAnalysis.suggestedPrice}}\n???쒓렇: {{$json.aiAnalysis.tags}}\n\n??{{$json.timestamp}}",
        "channel": "#market-uploads",
        "username": "YAGO VIBE Bot"
      },
      "name": "?뮠 Slack ?뚮┝",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [850, 200],
      "credentials": {
        "slackApi": {
          "id": "1",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "content": "?? **??留덉폆 ?대?吏 ?낅줈?쒕맖!**\n\n**?뚯씪紐?** `{{$json.filename}}`\n**?ш린:** {{$json.size}} bytes\n\n**?쨼 AI 遺꾩꽍:**\n- 移댄뀒怨좊━: {{$json.aiAnalysis.category}}\n- 釉뚮옖?? {{$json.aiAnalysis.brand}}\n- ?곹깭: {{$json.aiAnalysis.condition}}\n- 異붿쿇 媛寃? ??{$json.aiAnalysis.suggestedPrice}}\n\n[?대?吏 蹂닿린]({{$json.fileUrl}})",
        "webhookUrl": "={{$env.DISCORD_WEBHOOK_URL}}"
      },
      "name": "?렜 Discord ?뚮┝",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 1,
      "position": [850, 400]
    },
    {
      "parameters": {
        "operation": "create",
        "projectId": "={{$env.FIREBASE_PROJECT_ID}}",
        "collection": "ai-analysis-results",
        "documentId": "={{$json.filename.replace(/[^a-zA-Z0-9]/g, '_')}}",
        "documentData": "={\n  \"filename\": \"{{$json.filename}}\",\n  \"fileUrl\": \"{{$json.fileUrl}}\",\n  \"event\": \"{{$json.event}}\",\n  \"aiCategory\": \"{{$json.aiAnalysis.category}}\",\n  \"aiBrand\": \"{{$json.aiAnalysis.brand}}\",\n  \"aiCondition\": \"{{$json.aiAnalysis.condition}}\",\n  \"aiTags\": {{$json.aiAnalysis.tags}},\n  \"aiSuggestedPrice\": {{$json.aiAnalysis.suggestedPrice}},\n  \"analyzedAt\": \"{{$json.aiAnalysis.analyzedAt}}\",\n  \"success\": {{$json.aiAnalysis.success}}\n}"
      },
      "name": "?뵦 Firestore ???,
      "type": "n8n-nodes-base.googleFirestore",
      "typeVersion": 1,
      "position": [1050, 300],
      "credentials": {
        "googleFirestoreOAuth2Api": {
          "id": "2",
          "name": "Google Firestore account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "status",
              "value": "completed"
            },
            {
              "name": "message",
              "value": "???대?吏 遺꾩꽍 諛??뚮┝ ?꾨즺"
            }
          ]
        }
      },
      "name": "???꾨즺 ?묐떟",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [1250, 300]
    }
  ],
  "connections": {
    "?뱿 Webhook - Image Upload": {
      "main": [
        [
          {
            "node": "?㎥ ?곗씠??寃利?,
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "?㎥ ?곗씠??寃利?: {
      "main": [
        [
          {
            "node": "?쨼 AI Vision 遺꾩꽍",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "?쨼 AI Vision 遺꾩꽍": {
      "main": [
        [
          {
            "node": "?뮠 Slack ?뚮┝",
            "type": "main",
            "index": 0
          },
          {
            "node": "?렜 Discord ?뚮┝",
            "type": "main",
            "index": 0
          },
          {
            "node": "?뵦 Firestore ???,
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "?뮠 Slack ?뚮┝": {
      "main": [
        [
          {
            "node": "???꾨즺 ?묐떟",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "?렜 Discord ?뚮┝": {
      "main": [
        [
          {
            "node": "???꾨즺 ?묐떟",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "?뵦 Firestore ???: {
      "main": [
        [
          {
            "node": "???꾨즺 ?묐떟",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-09T00:00:00.000Z",
  "versionId": "1"
}
