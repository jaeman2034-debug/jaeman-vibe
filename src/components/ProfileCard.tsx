import React, { useState, useEffect } from 'react';import { getProfile, getUserReviews, calculateReputationScore, calcTemperature } from '@/services/reviewService';import { getBlockedUsers, unblockUser } from '@/services/reportService';import type { Profile, Review, ProfileStats } from '@/types/market';interface ProfileCardProps {  uid: string;  showReviews?: boolean;  showBlockedUsers?: boolean;}export default function ProfileCard({ uid, showReviews = true, showBlockedUsers = false }: ProfileCardProps) {  const [profile, setProfile] = useState<Profile | null>(null);  const [reviews, setReviews] = useState<Review[]>([]);  const [stats, setStats] = useState<ProfileStats | null>(null);  const [loading, setLoading] = useState(true);  const [blockedUsers, setBlockedUsers] = useState<string[]>([]);  const [showBlockedList, setShowBlockedList] = useState(false);  useEffect(() => {    loadProfileData();  }, [uid]);  const loadProfileData = async () => {    try {      setLoading(true);            // ?ÑÎ°ú???ïÎ≥¥ Î°úÎìú      const profileData = await getProfile(uid);      setProfile(profileData);            if (profileData) {        // ?âÌåê ?êÏàò Í≥ÑÏÇ∞        const calculatedStats = calculateReputationScore(profileData.stats);        setStats(calculatedStats);                // ?ÑÍ∏∞ Î™©Î°ù Î°úÎìú        if (showReviews) {          const reviewsData = await getUserReviews(uid);          setReviews(reviewsData);        }        // Ï∞®Îã®???¨Ïö©??Î™©Î°ù Î°úÎìú (Î≥∏Ïù∏ ?ÑÎ°ú?ÑÏù∏ Í≤ΩÏö∞Îß?        if (showBlockedUsers && profileData.uid === uid) {          const blocked = await getBlockedUsers();          setBlockedUsers(blocked);        }      }    } catch (error) {      console.error('?ÑÎ°ú???∞Ïù¥??Î°úÎìú ?§Ìå®:', error);    } finally {      setLoading(false);    }  };  // ?¨Ïö©??Ï∞®Îã® ?¥Ï†ú  const handleUnblockUser = async (targetUid: string) => {    try {      await unblockUser(targetUid);      setBlockedUsers(prev => prev.filter(uid => uid !== targetUid));      alert('?¨Ïö©??Ï∞®Îã®???¥Ï†ú?àÏäµ?àÎã§.');    } catch (error: any) {      alert(`Ï∞®Îã® ?¥Ï†ú ?§Ìå®: ${error.message}`);    }  };  // ?âÌåê ?êÏàò???∞Î•∏ ?âÏÉÅ Î∞??ÑÏù¥ÏΩ?  const getReputationDisplay = (score: number) => {    if (score >= 80) return { color: 'text-green-600', icon: '?î•', label: 'Îß§Ïö∞ Ï¢ãÏùå' };    if (score >= 60) return { color: 'text-blue-600', icon: '‚≠?, label: 'Ï¢ãÏùå' };    if (score >= 40) return { color: 'text-yellow-600', icon: '?òä', label: 'Î≥¥ÌÜµ' };    if (score >= 20) return { color: 'text-orange-600', icon: '?òê', label: 'Ï£ºÏùò' };    return { color: 'text-red-600', icon: '?†Ô∏è', label: '?òÏÅ®' };  };  // Îß§ÎÑà ?®ÎèÑ???∞Î•∏ ?âÏÉÅ Î∞??ÑÏù¥ÏΩ?  const getTemperatureDisplay = (temp: number) => {    if (temp >= 40) return { color: 'text-red-600', icon: '?î•', label: 'Îß§Ïö∞ ?®Í±∞?Ä' };    if (temp >= 37) return { color: 'text-orange-600', icon: '?å°Ô∏?, label: '?∞Îúª?? };    if (temp >= 36) return { color: 'text-green-600', icon: '?òä', label: '?ïÏÉÅ' };    if (temp >= 35) return { color: 'text-blue-600', icon: '?•∂', label: 'Ï∞®Í??Ä' };    return { color: 'text-purple-600', icon: '?ÑÔ∏è', label: 'Îß§Ïö∞ Ï∞®Í??Ä' };  };  if (loading) {    return (      <div className="border rounded-lg p-4 bg-white shadow-sm">        <div className="animate-pulse">          <div className="h-4 bg-gray-200 rounded w-1/3 mb-2"></div>          <div className="h-6 bg-gray-200 rounded w-1/2 mb-4"></div>          <div className="space-y-2">            <div className="h-3 bg-gray-200 rounded"></div>            <div className="h-3 bg-gray-200 rounded w-2/3"></div>          </div>        </div>      </div>    );  }  if (!profile) {    return (      <div className="border rounded-lg p-4 bg-white shadow-sm">        <p className="text-gray-500 text-center">?ÑÎ°ú?ÑÏùÑ Ï∞æÏùÑ ???ÜÏäµ?àÎã§.</p>      </div>    );  }  const reputationDisplay = stats ? getReputationDisplay(stats.reputationScore) : null;  const temperature = calcTemperature(profile.stats);  const temperatureDisplay = getTemperatureDisplay(temperature);  return (    <div className="border rounded-lg p-4 bg-white shadow-sm">      {/* Í∏∞Î≥∏ ?ïÎ≥¥ */}      <div className="flex items-center gap-3 mb-4">        <div className="w-12 h-12 bg-gray-200 rounded-full flex items-center justify-center">          {profile.photoURL ? (            <img src={profile.photoURL} alt={profile.nickname} className="w-full h-full rounded-full object-cover" />          ) : (            <span className="text-gray-500 text-lg">?ë§</span>          )}        </div>        <div className="flex-1">          <h3 className="font-semibold text-lg">{profile.nickname}</h3>          {reputationDisplay && (            <div className="flex items-center gap-2">              <span className={`text-sm font-medium ${reputationDisplay.color}`}>                {reputationDisplay.icon} {reputationDisplay.label}              </span>            </div>          )}        </div>                {/* Îß§ÎÑà ?®ÎèÑ Î∞∞Ï? */}        <div className="text-right">          <div className={`text-2xl font-bold ${temperatureDisplay.color}`}>            {temperature}¬∞C          </div>          <div className={`text-xs ${temperatureDisplay.color}`}>            {temperatureDisplay.icon} {temperatureDisplay.label}          </div>        </div>      </div>      {/* ?âÌåê ?êÏàò */}      {stats && (        <div className="mb-4 p-3 bg-gray-50 rounded-lg">          <div className="flex items-center justify-between mb-2">            <span className="font-medium">?âÌåê ?êÏàò</span>            <span className={`text-xl font-bold ${reputationDisplay?.color}`}>              {stats.reputationScore}??            </span>          </div>                    {/* ?êÏàò Î∞?*/}          <div className="w-full bg-gray-200 rounded-full h-2 mb-3">            <div               className={`h-2 rounded-full transition-all ${                stats.reputationScore >= 80 ? 'bg-green-500' :                stats.reputationScore >= 60 ? 'bg-blue-500' :                stats.reputationScore >= 40 ? 'bg-yellow-500' :                stats.reputationScore >= 20 ? 'bg-orange-500' : 'bg-red-500'              }`}              style={{ width: `${stats.reputationScore}%` }}            ></div>          </div>          {/* ?ÅÏÑ∏ ?µÍ≥Ñ */}          <div className="grid grid-cols-3 gap-4 text-sm">            <div className="text-center">              <div className="font-semibold text-blue-600">{stats.trades}</div>              <div className="text-gray-600">Í±∞Îûò??/div>            </div>            <div className="text-center">              <div className="font-semibold text-yellow-600">{stats.averageStars}??/div>              <div className="text-gray-600">?âÍ∑†Î≥ÑÏ†ê</div>            </div>            <div className="text-center">              <div className="font-semibold text-green-600">{stats.pos}</div>              <div className="text-gray-600">Í∏çÏ†ï</div>            </div>          </div>        </div>      )}      {/* Ï∞®Îã®???¨Ïö©??Í¥ÄÎ¶?*/}      {showBlockedUsers && blockedUsers.length > 0 && (        <div className="mb-4 p-3 bg-red-50 border border-red-200 rounded-lg">          <div className="flex items-center justify-between mb-2">            <h4 className="font-medium text-red-800">Ï∞®Îã®???¨Ïö©??/h4>            <button              onClick={() => setShowBlockedList(!showBlockedList)}              className="text-sm text-red-600 hover:text-red-800"            >              {showBlockedList ? '?®Í∏∞Í∏? : 'Î≥¥Í∏∞'}            </button>          </div>                    {showBlockedList && (            <div className="space-y-2">              {blockedUsers.map(blockedUid => (                <div key={blockedUid} className="flex items-center justify-between p-2 bg-white rounded border">                  <span className="text-sm text-gray-700">                    ?¨Ïö©??{blockedUid.slice(-4)}                  </span>                  <button                    onClick={() => handleUnblockUser(blockedUid)}                    className="px-2 py-1 text-xs bg-green-100 text-green-700 rounded hover:bg-green-200"                  >                    Ï∞®Îã® ?¥Ï†ú                  </button>                </div>              ))}            </div>          )}                    <p className="text-xs text-red-600 mt-2">            Ï∞®Îã®???¨Ïö©?êÏ???Î©îÏãúÏßÄ ?ÑÏÜ°Í≥?Í±∞ÎûòÍ∞Ä ?úÌïú?©Îãà??          </p>        </div>      )}      {/* ?ÑÍ∏∞ Î™©Î°ù */}      {showReviews && reviews.length > 0 && (        <div>          <h4 className="font-medium mb-3">ÏµúÍ∑º ?ÑÍ∏∞</h4>          <div className="space-y-3">            {reviews.slice(0, 3).map(review => (              <div key={review.id} className="border-l-4 border-blue-200 pl-3 py-2">                <div className="flex items-center gap-2 mb-1">                  <div className="flex text-yellow-400">                    {[1, 2, 3, 4, 5].map(star => (                      <span key={star} className={star <= review.stars ? 'text-yellow-400' : 'text-gray-300'}>                        ??                      </span>                    ))}                  </div>                  <span className="text-sm text-gray-500">                    {review.createdAt?.toDate ?                       review.createdAt.toDate().toLocaleDateString('ko-KR') :                       'ÏµúÍ∑º'                    }                  </span>                </div>                                <div className="flex flex-wrap gap-1 mb-2">                  {review.tags.map(tag => (                    <span                       key={tag}                       className="px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded-full"                    >                      {tag}                    </span>                  ))}                </div>                                {review.comment && (                  <p className="text-sm text-gray-700">{review.comment}</p>                )}              </div>            ))}          </div>                    {reviews.length > 3 && (            <p className="text-sm text-gray-500 text-center mt-2">              +{reviews.length - 3}Í∞???Î≥¥Í∏∞            </p>          )}        </div>      )}      {/* ?ÑÍ∏∞Í∞Ä ?ÜÎäî Í≤ΩÏö∞ */}      {showReviews && reviews.length === 0 && (        <div className="text-center py-4 text-gray-500">          <p>?ÑÏßÅ ?ÑÍ∏∞Í∞Ä ?ÜÏäµ?àÎã§.</p>          <p className="text-sm">Ï≤?Í±∞Îûò ???ÑÍ∏∞Î•??®Í≤®Î≥¥ÏÑ∏??</p>        </div>      )}    </div>  );}