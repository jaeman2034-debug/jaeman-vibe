import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useState } from "react";
import { flattenCategories, categoryTree } from "./categories";
const catOptions = flattenCategories(categoryTree);
export default function FiltersBar({ value, onChange }) { const [local, setLocal] = useState(value); useEffect(() => setLocal(value), [value]); return (_jsxs("div", { className: "rounded-2xl border bg-white p-3 md:p-4 shadow-sm", children: ["      ", _jsxs("div", { className: "grid gap-2 md:grid-cols-[1fr_220px_160px_160px_160px]", children: ["        ", _jsx("input", { value: local.q, onChange: e => setLocal({ ...local, q: e.target.value }), placeholder: "\uAC80?\uFFFD\uC5B4 (?? \uAE00?\uFFFD\uBE0C, \uBC30\uD2B8)", className: "rounded-xl border px-3 py-2 bg-white" }), "        ", _jsxs("select", { value: local.category ?? "", onChange: e => setLocal({ ...local, category: e.target.value || null }), className: "rounded-xl border px-3 py-2 bg-white", children: ["          ", _jsx("option", { value: "", children: "?\uFFFD\uCCB4 \uCE74\uD14C\uACE0\uB9AC" }), "          ", catOptions.map(c => _jsx("option", { value: c.code, children: c.label }, c.code)), "        "] }), "        ", _jsxs("select", { value: local.condition ?? "", onChange: e => setLocal({ ...local, condition: (e.target.value || null) }), className: "rounded-xl border px-3 py-2 bg-white", children: ["          ", _jsx("option", { value: "", children: "?\uFFFD\uCCB4 ?\uFFFD\uD0DC" }), "          ", _jsxs("option", { value: "new", children: ["?\uFFFD\uC0C1??/option>          ", _jsx("option", { value: "like-new", children: "\uAC70\uC758 ?\uFFFD\uAC83" }), "          ", _jsx("option", { value: "good", children: "?\uFFFD\uD638" }), "          ", _jsx("option", { value: "fair", children: "\uBCF4\uD1B5" }), "        "] })] }), "        ", _jsxs("div", { className: "flex gap-2", children: ["          ", _jsx("input", { inputMode: "numeric", placeholder: "\uCD5C\uC18C\uAC00", value: local.min ?? "", onChange: e => setLocal({ ...local, min: e.target.value ? Number(e.target.value.replace(/\D/g, "")) : null }), className: "w-full rounded-xl border px-3 py-2 bg-white" }), "          ", _jsx("input", { inputMode: "numeric", placeholder: "\uCD5C\uFFFD?\uAC00", value: local.max ?? "", onChange: e => setLocal({ ...local, max: e.target.value ? Number(e.target.value.replace(/\D/g, "")) : null }), className: "w-full rounded-xl border px-3 py-2 bg-white" }), "        "] }), "        ", _jsxs("select", { value: local.sort, onChange: e => setLocal({ ...local, sort: e.target.value }), className: "rounded-xl border px-3 py-2 bg-white", children: ["          ", _jsxs("option", { value: "latest", children: ["\uCD5C\uC2E0??/option>          ", _jsxs("option", { value: "price-low", children: ["\uAC00\uFFFD??????/option>          ", _jsx("option", { value: "price-high", children: "\uAC00\uFFFD??\uFFFD\uFFFD???/option>        " }), "      "] }), "      ", _jsxs("div", { className: "mt-3 flex justify-end gap-2", children: ["        ", _jsx("button", { onClick: () => onChange(local), className: "rounded-xl bg-blue-600 text-white px-4 py-2", children: "?\uFFFD\uC6A9" }), "        ", _jsx("button", { onClick: () => onChange({ q: "", category: null, min: null, max: null, condition: null, sort: "latest" }), className: "rounded-xl border px-4 py-2", children: "\uCD08\uAE30??/button>      " })] }), "    "] }), "  );} "] })] })] })); }
