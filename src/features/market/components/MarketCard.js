"use strict";
// src/features/market/components/MarketCard.tsximport React from 'react';import { haversineKm, formatDistance } from '@/lib/distance';import { useLocationStore, isLocationValid } from '@/stores/locationStore';interface MarketItem {  id: string;  title: string;  price: number;  description?: string;  category: string;  condition: string;  images?: string[];  location?: {    lat: number;    lng: number;    accuracy?: number;  };  region_dong?: string;  region_sigungu?: string;  region_full?: string;  createdAt: any;  ownerId: string;  status: string;}interface MarketCardProps {  item: MarketItem;  onClick?: (item: MarketItem) => void;  showDistance?: boolean;}export function MarketCard({ item, onClick, showDistance = true }: MarketCardProps) {  const { userLoc } = useLocationStore();  const hasValidUserLocation = isLocationValid(userLoc);  const hasItemLocation = item?.location?.lat && item?.location?.lng;  // 카드?�서 커버 ?�택 (images[0].url ?�선, ?�거??imageUrl 백업)  const cover = (() => {    const firstImage = item?.images?.[0];    if (firstImage && typeof firstImage === 'object' && 'url' in firstImage) {      return firstImage.url;    }    if (firstImage && typeof firstImage === 'string') {      return firstImage;    }    return null;  })();  // 거리 ?�는 ?�정???�시 결정  let locationBadge = '?�치 미설??;  let badgeType: 'distance' | 'region' | 'none' = 'none';  if (hasItemLocation) {    if (hasValidUserLocation && showDistance) {      // ?�용???�치가 ?�고 거리 ?�시가 ?�성?�된 경우      const km = haversineKm(userLoc!, item.location!);      locationBadge = formatDistance(km);      badgeType = 'distance';    } else {      // ?�정???�보 ?�시      locationBadge = item.region_dong || item.region_sigungu || item.region_full || '?�치 ?�보';      badgeType = 'region';    }  }  const handleClick = () => {    if (onClick) {      onClick(item);    }  };  return (    <div       className="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden hover:shadow-md transition-shadow cursor-pointer"      onClick={handleClick}    >      {/* ?�네??*/}      <div className="aspect-square bg-gray-100 relative">        {cover ? (          <img            src={cover}            alt={item.title}            className="w-full h-full object-cover"            loading="lazy"          />        ) : (          <div className="w-full h-full flex items-center justify-center text-gray-400">            <svg className="w-12 h-12" fill="none" stroke="currentColor" viewBox="0 0 24 24">              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />            </svg>          </div>        )}                {/* ?�태 뱃�? */}        <div className="absolute top-2 left-2">          <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">            {item.status === 'active' ? '?�매�? : '?�매?�료'}          </span>        </div>      </div>      {/* ?�용 */}      <div className="p-4">        {/* ?�목 */}        <h3 className="font-semibold text-gray-900 text-sm line-clamp-2 mb-2">          {item.title}        </h3>        {/* 가�?*/}        <div className="text-lg font-bold text-gray-900 mb-2">          {item.price > 0 ? `${item.price.toLocaleString()}?? : '가�??�의'}        </div>        {/* 카테고리 */}        <div className="text-xs text-gray-500 mb-2">          {item.category}        </div>        {/* ?�치 ?�보 */}        <div className="flex items-center justify-between">          <div className="text-xs text-gray-500">            {item.region_dong || item.region_sigungu || item.region_full || '?�치 미설??}          </div>                    {/* 거리/?�정??뱃�? */}          <span             className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${              badgeType === 'distance'                 ? 'bg-green-100 text-green-800'                 : badgeType === 'region'                ? 'bg-gray-100 text-gray-800'                : 'bg-red-100 text-red-800'            }`}          >            {badgeType === 'distance' && '?�� '}            {locationBadge}          </span>        </div>      </div>    </div>  );}// 기본 ?�보?�기export default MarketCard; 
