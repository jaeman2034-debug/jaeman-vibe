// ??YAGO VIBE Î≤ÑÍ∑∏Î∞îÏö¥??QA Ï≤¥ÌÅ¨Î¶¨Ïä§??(Firestore ?êÎèô ?Ä??Î≤ÑÏ†Ñ)
import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from "recharts";
import jsPDF from "jspdf";
import { collection, addDoc, serverTimestamp, updateDoc, doc } from "firebase/firestore";
import { db } from "../lib/firebase";
import { useAuth } from "../hooks/useAuth";

interface CheckItem {
  id: string;
  category: string;
  item: string;
  expectedResult: string;
  completed: boolean;
}

export default function BugBounceCheck() {
  const navigate = useNavigate();
  const { user: currentUser } = useAuth();
  const [reportId, setReportId] = useState<string | null>(null);
  const [checklist, setChecklist] = useState<CheckItem[]>([
    // 1Ô∏è‚É£ Î°úÍ∑∏??/ ?∏Ï¶ù
    {
      id: "auth-1",
      category: "1Ô∏è‚É£ Î°úÍ∑∏??/ ?∏Ï¶ù",
      item: "Firebase Auth Î°úÍ∑∏???ïÏÉÅ ?ëÎèô",
      expectedResult: "UID ?ïÏÉÅ Ï∂úÎ†•??(currentUser.uid)",
      completed: false
    },
    {
      id: "auth-2", 
      category: "1Ô∏è‚É£ Î°úÍ∑∏??/ ?∏Ï¶ù",
      item: "Î°úÍ∑∏?ÑÏõÉ ???òÏù¥ÏßÄ ?ëÍ∑º Ï∞®Îã®",
      expectedResult: "ÎπÑÎ°úÍ∑∏Ïù∏ ???òÏ†ï¬∑??†ú Î≤ÑÌäº ?®Í?",
      completed: false
    },
    
    // 2Ô∏è‚É£ ?ÅÌíà ?±Î°ù
    {
      id: "register-1",
      category: "2Ô∏è‚É£ ?ÅÌíà ?±Î°ù", 
      item: "?¥Î?ÏßÄ ?ÖÎ°ú??+ AI ?†Î¢∞???êÏàò ?ùÏÑ±",
      expectedResult: "Storage ?ÖÎ°ú????Firestore??imageUrl, aiScore ?Ä??,
      completed: false
    },
    {
      id: "register-2",
      category: "2Ô∏è‚É£ ?ÅÌíà ?±Î°ù",
      item: "?±Î°ù ???êÎèô Î¶¨Îã§?¥Î†â??, 
      expectedResult: "/market ?êÎäî ?ÅÏÑ∏ ?òÏù¥ÏßÄÎ°??¥Îèô",
      completed: false
    },
    
    // 3Ô∏è‚É£ ?ÅÌíà ?ÅÏÑ∏ ?òÏù¥ÏßÄ
    {
      id: "detail-1",
      category: "3Ô∏è‚É£ ?ÅÌíà ?ÅÏÑ∏ ?òÏù¥ÏßÄ",
      item: "Î°úÍ≥† ?¥Î¶≠ ?????¥Îèô",
      expectedResult: "/ Î°??¥Îèô??,
      completed: false
    },
    {
      id: "detail-2",
      category: "3Ô∏è‚É£ ?ÅÌíà ?ÅÏÑ∏ ?òÏù¥ÏßÄ", 
      item: "?êÎß§?êÎßå '?òÏ†ï/??†ú/?ÅÌÉú Î≥ÄÍ≤? Î≤ÑÌäº ?úÏãú",
      expectedResult: "ÎπÑÎ°úÍ∑∏Ïù∏ ???®Í? / ?êÎß§?êÎßå ?úÏãú",
      completed: false
    },
    
    // 4Ô∏è‚É£ ?ÅÌíà ?òÏ†ï
    {
      id: "edit-1",
      category: "4Ô∏è‚É£ ?ÅÌíà ?òÏ†ï",
      item: "Í∏∞Ï°¥ ?∞Ïù¥???êÎèô Î°úÎìú",
      expectedResult: "Firestore Í∞?Î∂àÎü¨?§Í∏∞ ?ïÏÉÅ",
      completed: false
    },
    {
      id: "edit-2", 
      category: "4Ô∏è‚É£ ?ÅÌíà ?òÏ†ï",
      item: "?òÏ†ï ???ÖÎç∞?¥Ìä∏ Î∞òÏòÅ",
      expectedResult: "??Í∞íÏù¥ ?ÅÏÑ∏ ?òÏù¥ÏßÄ??Ï¶âÏãú Î∞òÏòÅ??,
      completed: false
    },
    
    // 5Ô∏è‚É£ ?ÅÌíà ??†ú
    {
      id: "delete-1",
      category: "5Ô∏è‚É£ ?ÅÌíà ??†ú",
      item: "??†ú Î≤ÑÌäº ?¥Î¶≠ ??Ï¶âÏãú Firestore ?úÍ±∞",
      expectedResult: "/market?ºÎ°ú ?êÎèô Î¶¨Îã§?¥Î†â??,
      completed: false
    },
    
    // 6Ô∏è‚É£ ?ÅÌÉú Î≥ÄÍ≤?Î≤ÑÌäº
    {
      id: "status-1",
      category: "6Ô∏è‚É£ ?ÅÌÉú Î≥ÄÍ≤?Î≤ÑÌäº",
      item: "?êÎß§Ï§???Í±∞ÎûòÏ§????ÑÎ£å ?úÌôò",
      expectedResult: "?âÏÉÅ¬∑?çÏä§?∏¬∑ÏÉÅ?úÍ∞í ?ÑÎ? ?ïÏÉÅ Î∞òÏòÅ",
      completed: false
    },
    
    // 7Ô∏è‚É£ UI/UX ?ïÏù∏
    {
      id: "ui-1",
      category: "7Ô∏è‚É£ UI/UX ?ïÏù∏",
      item: "Î°úÍ≥† ?¥Î¶≠ ?????¥Îèô",
      expectedResult: "?ïÏÉÅ ?¥Îèô",
      completed: false
    },
    {
      id: "ui-2",
      category: "7Ô∏è‚É£ UI/UX ?ïÏù∏",
      item: "ÎßàÏºì ?ÑÏù¥ÏΩ??¥Î¶≠ ??Î™©Î°ù ?¥Îèô", 
      expectedResult: "?ïÏÉÅ ?¥Îèô",
      completed: false
    },
    
    // 8Ô∏è‚É£ Firestore Íµ¨Ï°∞
    {
      id: "firestore-1",
      category: "8Ô∏è‚É£ Firestore Íµ¨Ï°∞",
      item: "products Ïª¨Î†â??Ï°¥Ïû¨",
      expectedResult: "Î™®Îì† ?ÅÌíà Î¨∏ÏÑú ??sellerId, status, imageUrl ?ÑÎìú ?ïÏù∏",
      completed: false
    },
    
    // 9Ô∏è‚É£ Î∞òÏùë???åÏä§??    {
      id: "responsive-1",
      category: "9Ô∏è‚É£ Î∞òÏùë???åÏä§??,
      item: "Î™®Î∞î??375px) UI Íπ®Ïßê ?ÜÏùå",
      expectedResult: "Î≤ÑÌäº Ï§ÑÎ∞îÍø? ?¥Î?ÏßÄ Ï§ëÏïô ?ïÎ†¨ ?†Ï?",
      completed: false
    },
    
    // ?îü PWA / ?§Ïπò Î∞∞ÎÑà
    {
      id: "pwa-1",
      category: "?îü PWA / ?§Ïπò Î∞∞ÎÑà",
      item: "???îÎ©¥ Ï∂îÍ? Î∞∞ÎÑà ?∏Ï∂ú ?ïÏù∏",
      expectedResult: "??'YAGO VIBE ?§Ïπò' Î∞∞ÎÑà ?úÏãú",
      completed: false
    }
  ]);

  // ??Firestore????QA Î¶¨Ìè¨??Î¨∏ÏÑú ?ùÏÑ± (Ï≤?ÏßÑÏûÖ ??1??
  useEffect(() => {
    const createNewReport = async () => {
      if (!currentUser) {
        console.log("??Î°úÍ∑∏?∏Ïù¥ ?ÑÏöî?©Îãà??");
        return;
      }

      try {
        const reportRef = await addDoc(collection(db, "QA_Reports"), {
          userId: currentUser.uid,
          email: currentUser.email || "unknown",
          displayName: currentUser.displayName || "Í¥ÄÎ¶¨Ïûê",
          createdAt: serverTimestamp(),
          updatedAt: serverTimestamp(),
          progress: 0,
          completed: 0,
          total: checklist.length,
          results: checklist.map(item => item.completed),
          checklist: checklist.map(item => ({
            id: item.id,
            category: item.category,
            item: item.item,
            expectedResult: item.expectedResult,
            completed: item.completed
          }))
        });
        
        setReportId(reportRef.id);
        console.log("??QA Î¶¨Ìè¨???ùÏÑ±??", reportRef.id);
        
        // Î°úÏª¨ ?§ÌÜ†Î¶¨Ï??êÎèÑ ?Ä??(Î∞±ÏóÖ??
        localStorage.setItem('yago-vibe-qa-report-id', reportRef.id);
      } catch (error) {
        console.error("??QA Î¶¨Ìè¨???ùÏÑ± ?§Ìå®:", error);
      }
    };

    // Í∏∞Ï°¥ Î¶¨Ìè¨??IDÍ∞Ä ?àÎäîÏßÄ ?ïÏù∏
    const existingReportId = localStorage.getItem('yago-vibe-qa-report-id');
    if (existingReportId) {
      setReportId(existingReportId);
      console.log("?ìã Í∏∞Ï°¥ QA Î¶¨Ìè¨??Î°úÎìú:", existingReportId);
    } else {
      createNewReport();
    }
  }, [currentUser, checklist.length]);

  // ??Firestore??Ï≤¥ÌÅ¨ Î≥Ä???§ÏãúÍ∞??Ä??  useEffect(() => {
    const saveProgress = async () => {
      if (!reportId || !currentUser) return;

      try {
        const completedCount = checklist.filter(item => item.completed).length;
        const progressPercentage = Math.round((completedCount / checklist.length) * 100);

        await updateDoc(doc(db, "QA_Reports", reportId), {
          updatedAt: serverTimestamp(),
          progress: progressPercentage,
          completed: completedCount,
          results: checklist.map(item => item.completed),
          checklist: checklist.map(item => ({
            id: item.id,
            category: item.category,
            item: item.item,
            expectedResult: item.expectedResult,
            completed: item.completed
          }))
        });

        console.log("?íæ QA ÏßÑÌñâ?ÅÌô© ?Ä?•Îê®:", progressPercentage + "%");
      } catch (error) {
        console.error("??QA ÏßÑÌñâ?ÅÌô© ?Ä???§Ìå®:", error);
      }
    };

    // Ï¥àÍ∏∞ Î°úÎìúÍ∞Ä ?ÑÎãê ?åÎßå ?Ä??(Î¨¥Ìïú Î£®ÌîÑ Î∞©Ï?)
    if (reportId && checklist.some(item => item.completed)) {
      saveProgress();
    }
  }, [checklist, reportId, currentUser]);

  // Ï≤¥ÌÅ¨Î∞ïÏä§ ?†Í?
  const toggleCheck = (id: string) => {
    setChecklist(prev => 
      prev.map(item => 
        item.id === id ? { ...item, completed: !item.completed } : item
      )
    );
  };

  // ÏßÑÌñâÎ•?Í≥ÑÏÇ∞
  const completedCount = checklist.filter(item => item.completed).length;
  const totalCount = checklist.length;
  const progressPercentage = Math.round((completedCount / totalCount) * 100);

  // Recharts ?∞Ïù¥??  const COLORS = ["#10B981", "#EF4444"]; // green-500, red-500
  const chartData = [
    { name: "?ÑÎ£å", value: completedCount, color: COLORS[0] },
    { name: "ÎØ∏ÏôÑÎ£?, value: totalCount - completedCount, color: COLORS[1] }
  ];

  // PDF Î≥¥Í≥†???§Ïö¥Î°úÎìú
  const downloadPDF = () => {
    const doc = new jsPDF();
    
    // ?§Îçî
    doc.setFontSize(20);
    doc.setTextColor(30, 64, 175); // blue-900
    doc.text("YAGO VIBE Î≤ÑÍ∑∏Î∞îÏö¥??QA Ï≤¥ÌÅ¨Î¶¨Ïä§??, 15, 20);
    
    // ?ëÏÑ±???ïÎ≥¥
    doc.setFontSize(14);
    doc.setTextColor(0, 0, 0);
    doc.text(`?ëÏÑ±?? ${currentUser?.email || "Unknown"}`, 15, 35);
    doc.text(`ÏßÑÌñâÎ•? ${progressPercentage}% (${completedCount}/${totalCount} ?ÑÎ£å)`, 15, 45);
    doc.text(`?ùÏÑ±?? ${new Date().toLocaleString('ko-KR')}`, 15, 55);
    
    // Firestore Î¶¨Ìè¨??ID
    if (reportId) {
      doc.setFontSize(10);
      doc.setTextColor(100, 100, 100);
      doc.text(`Î¶¨Ìè¨??ID: ${reportId}`, 15, 65);
    }
    
    // Ï≤¥ÌÅ¨Î¶¨Ïä§????™©??    let yPosition = 75;
    doc.setFontSize(12);
    
    checklist.forEach((item, index) => {
      if (yPosition > 250) {
        doc.addPage();
        yPosition = 20;
      }
      
      const status = item.completed ? "???ÑÎ£å" : "??ÎØ∏ÏôÑÎ£?;
      const statusColor = item.completed ? [16, 185, 129] : [239, 68, 68]; // green-500 or red-500
      
      doc.setTextColor(0, 0, 0);
      doc.text(`${index + 1}. ${item.item}`, 15, yPosition);
      doc.setTextColor(statusColor[0], statusColor[1], statusColor[2]);
      doc.text(status, 15, yPosition + 8);
      doc.setTextColor(100, 100, 100);
      doc.setFontSize(10);
      doc.text(`   Í∏∞Î? Í≤∞Í≥º: ${item.expectedResult}`, 15, yPosition + 16);
      
      doc.setFontSize(12);
      yPosition += 30;
    });
    
    // ?ÑÎ£å Î©îÏãúÏßÄ
    if (progressPercentage === 100) {
      doc.addPage();
      doc.setFontSize(18);
      doc.setTextColor(16, 185, 129); // green-500
      doc.text("?éâ Ï∂ïÌïò?©Îãà??", 15, 50);
      doc.setTextColor(0, 0, 0);
      doc.text("Î™®Îì† QA Ï≤¥ÌÅ¨Î¶¨Ïä§?∏Í? ?ÑÎ£å?òÏóà?µÎãà??", 15, 70);
      doc.text("?¥Ï†ú YAGO VIBEÎ•??àÏ†Ñ?òÍ≤å Î∞∞Ìè¨?????àÏäµ?àÎã§.", 15, 90);
    }
    
    doc.save(`YAGO_VIBE_QA_Report_${new Date().toISOString().split('T')[0]}.pdf`);
  };

  // ?ÑÏ≤¥ Ï¥àÍ∏∞??  const resetAll = () => {
    if (window.confirm("Î™®Îì† Ï≤¥ÌÅ¨Î¶¨Ïä§?∏Î? Ï¥àÍ∏∞?îÌïò?úÍ≤†?µÎãàÍπ?")) {
      setChecklist(prev => prev.map(item => ({ ...item, completed: false })));
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6">
      <div className="max-w-6xl mx-auto">
        {/* ?§Îçî */}
        <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
          <div className="flex items-center justify-between mb-4">
            <div>
              <h1 className="text-3xl font-bold text-blue-900 mb-2">
                ?? YAGO VIBE Î≤ÑÍ∑∏Î∞îÏö¥??QA Ï≤¥ÌÅ¨Î¶¨Ïä§??              </h1>
              <p className="text-gray-600">Í¥ÄÎ¶¨Ïûê??- Î∞∞Ìè¨ ??QA ?êÍ? (10Î∂??ÑÏ£º??</p>
              {reportId && (
                <p className="text-xs text-gray-500 mt-1">
                  ?íæ Firestore ?êÎèô ?Ä???úÏÑ±??| Î¶¨Ìè¨??ID: {reportId.slice(0, 8)}...
                </p>
              )}
            </div>
            <div className="text-right">
              <div className="text-2xl font-bold text-green-600">
                {completedCount} / {totalCount}
              </div>
              <div className="text-sm text-gray-500">?ÑÎ£å????™©</div>
              {currentUser && (
                <div className="text-xs text-gray-400 mt-1">
                  ?ë§ {currentUser.email}
                </div>
              )}
            </div>
          </div>

          {/* ?ÑÏ≤¥ ÏßÑÌñâÎ•?Î∞?*/}
          <div className="w-full bg-gray-200 rounded-full h-4 mb-4">
            <div 
              className="bg-gradient-to-r from-blue-500 to-green-500 h-4 rounded-full transition-all duration-300"
              style={{ width: `${progressPercentage}%` }}
            ></div>
          </div>
          <div className="flex justify-between items-center">
            <span className="text-lg font-semibold text-gray-700">
              ?ÑÏ≤¥ ÏßÑÌñâÎ•? {progressPercentage}%
            </span>
            <div className="flex gap-2">
              <button
                onClick={resetAll}
                className="px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition"
              >
                ?îÑ Ï¥àÍ∏∞??              </button>
              <button
                onClick={downloadPDF}
                className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition"
              >
                ?ìÑ PDF Î≥¥Í≥†???§Ïö¥Î°úÎìú
              </button>
              <button
                onClick={() => navigate("/admin/dashboard")}
                className="px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition"
              >
                ?ìä ?Ä?úÎ≥¥?úÎ°ú
              </button>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Ï≤¥ÌÅ¨Î¶¨Ïä§??*/}
          <div className="bg-white rounded-lg shadow-sm">
            <div className="p-6 border-b">
              <h2 className="text-xl font-semibold">?ìã ?ÅÏÑ∏ Ï≤¥ÌÅ¨Î¶¨Ïä§??/h2>
            </div>
            <div className="divide-y divide-gray-200 max-h-96 overflow-y-auto">
              {checklist.map((item, index) => (
                <div 
                  key={item.id}
                  className={`p-4 hover:bg-gray-50 transition-colors ${
                    item.completed ? 'bg-green-50' : ''
                  }`}
                >
                  <div className="flex items-start gap-3">
                    <div className="flex-shrink-0 mt-1">
                      <input
                        type="checkbox"
                        checked={item.completed}
                        onChange={() => toggleCheck(item.id)}
                        className="w-5 h-5 text-blue-600 border-gray-300 rounded focus:ring-blue-500"
                      />
                    </div>
                    <div className="flex-1 min-w-0">
                      <div className="flex items-center gap-2 mb-1">
                        <span className="text-xs font-medium text-blue-600 bg-blue-100 px-2 py-1 rounded">
                          {item.category}
                        </span>
                        <span className="text-xs text-gray-500">#{index + 1}</span>
                      </div>
                      <h3 className={`text-sm font-medium mb-1 ${
                        item.completed ? 'text-green-700 line-through' : 'text-gray-900'
                      }`}>
                        {item.item}
                      </h3>
                      <p className={`text-xs ${
                        item.completed ? 'text-green-600' : 'text-gray-600'
                      }`}>
                        <strong>Í∏∞Î? Í≤∞Í≥º:</strong> {item.expectedResult}
                      </p>
                    </div>
                    {item.completed && (
                      <div className="flex-shrink-0">
                        <span className="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                          ??                        </span>
                      </div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Ï∞®Ìä∏ Î∞??µÍ≥Ñ */}
          <div className="bg-white rounded-lg shadow-sm">
            <div className="p-6 border-b">
              <h2 className="text-xl font-semibold">?ìä ÏßÑÌñâÎ•??µÍ≥Ñ</h2>
            </div>
            <div className="p-6">
              {/* ?åÏù¥Ï∞®Ìä∏ */}
              <div className="h-64 mb-6">
                <ResponsiveContainer width="100%" height="100%">
                  <PieChart>
                    <Pie
                      data={chartData}
                      cx="50%"
                      cy="50%"
                      innerRadius={60}
                      outerRadius={100}
                      paddingAngle={5}
                      dataKey="value"
                    >
                      {chartData.map((entry, index) => (
                        <Cell key={`cell-${index}`} fill={entry.color} />
                      ))}
                    </Pie>
                    <Tooltip 
                      formatter={(value: number, name: string) => [`${value}Í∞?, name]}
                    />
                  </PieChart>
                </ResponsiveContainer>
              </div>

              {/* Î≤îÎ? */}
              <div className="flex justify-center gap-6 mb-6">
                {chartData.map((item, index) => (
                  <div key={index} className="flex items-center gap-2">
                    <div 
                      className="w-3 h-3 rounded-full"
                      style={{ backgroundColor: item.color }}
                    ></div>
                    <span className="text-sm text-gray-600">{item.name}: {item.value}Í∞?/span>
                  </div>
                ))}
              </div>

              {/* ?ÑÎ£å ?ÅÌÉú ?úÏãú */}
              {progressPercentage === 100 && (
                <div className="bg-gradient-to-r from-green-400 to-blue-500 rounded-lg p-4 text-white text-center">
                  <h3 className="text-lg font-bold mb-1">?éâ Ï∂ïÌïò?©Îãà??</h3>
                  <p className="text-sm opacity-90">Î™®Îì† QA Ï≤¥ÌÅ¨Î¶¨Ïä§?∏Í? ?ÑÎ£å?òÏóà?µÎãà??</p>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* ?òÎã® ?àÎÇ¥ */}
        <div className="mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <div className="flex items-start gap-3">
            <span className="text-yellow-600 text-xl">?†Ô∏è</span>
            <div>
              <h3 className="font-semibold text-yellow-800 mb-1">QA ?êÍ? ?àÎÇ¥</h3>
              <ul className="text-sm text-yellow-700 space-y-1">
                <li>??Í∞???™©???§Ï†úÎ°??åÏä§?∏Ìïú ??Ï≤¥ÌÅ¨?òÏÑ∏??/li>
                <li>??Î™®Îì† Ï≤¥ÌÅ¨Î¶¨Ïä§?∏Í? ?ÑÎ£å?òÎ©¥ ?¥ÏòÅ ?πÏù∏ Í∞Ä?•Ìï©?àÎã§</li>
                <li>??Ï≤¥ÌÅ¨Î¶¨Ïä§???ÅÌÉú??Î∏åÎùº?∞Ï????êÎèô ?Ä?•Îê©?àÎã§</li>
                <li>??PDF Î≥¥Í≥†?úÎ°ú ?êÍ? Í≤∞Í≥ºÎ•??Ä?•Ìï† ???àÏäµ?àÎã§</li>
                <li>???àÏÉÅ ?åÏöî ?úÍ∞Ñ: ??10Î∂?/li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
