import { useState } from "react";
import { useNavigate } from "react-router-dom";
export default function GroupsCreate() { const nav = useNavigate(); const [form, setForm] = useState({ name: "", schedule: "", place: "", desc: "", lat: "", lng: "" }); const [loading, setLoading] = useState(false); const onChange = (e) => setForm(s => ({ ...s, [e.target.name]: e.target.value })); const useMyLocation = () => { navigator.geolocation.getCurrentPosition(pos => setForm(s => ({ ...s, lat: String(pos.coords.latitude), lng: String(pos.coords.longitude) })), () => alert("?�치 권한???�요?�니??")); }; const onSubmit = async (e) => { e.preventDefault(); if (loading)
    return; setLoading(true); try { }
finally { } }; } // 1) 로그??보장 (규칙??auth ?�요?�면 ?�수)      if (!auth.currentUser) {        await signInWithPopup(auth, googleProvider);      }      // 2) Firestore ?�??      await createGroup({        name: form.name.trim(),        schedule: form.schedule.trim(),        place: form.place.trim(),        desc: form.desc.trim(),        lat: form.lat ? Number(form.lat) : null,        lng: form.lng ? Number(form.lng) : null,      });      // ??먼�? ?�피???�제      setLoading(false);      alert("모임 ?�성 ?�료!");      // ?�면 ?�환?� ?�음 ?�레?�에      requestAnimationFrame(() => nav("/groups", { replace: true }));    } catch (err: any) {      console.error("[GROUPS_CREATE] error:", err);      setLoading(false); // ?�패 ?�도 바로 ?�제      alert("?�???�패: " + (err?.code || err?.message || String(err)));    }  };  return (    <form onSubmit={onSubmit} className="space-y-6">      <h2 className="text-2xl font-extrabold">모임 만들�?/h2>      <div className="card space-y-4">        <div className="grid gap-4 md:grid-cols-2">          <input name="name" placeholder="모임�? value={form.name} onChange={onChange}                 className="rounded-xl border border-slate-200 px-4 py-2.5" required />          <input name="schedule" placeholder="?�정 (?? ??09:00)" value={form.schedule} onChange={onChange}                 className="rounded-xl border border-slate-200 px-4 py-2.5" required />          <input name="place" placeholder="?�소" value={form.place} onChange={onChange}                 className="rounded-xl border border-slate-200 px-4 py-2.5" required />          <input name="lat" placeholder="?�도(lat)" value={form.lat} onChange={onChange}                 className="rounded-xl border border-slate-200 px-4 py-2.5" />          <input name="lng" placeholder="경도(lng)" value={form.lng} onChange={onChange}                 className="rounded-xl border border-slate-200 px-4 py-2.5" />        </div>        <textarea name="desc" placeholder="?�명" value={form.desc} onChange={onChange}                  className="w-full rounded-xl border border-slate-200 px-4 py-2.5 h-28" />        <button type="button" className="btn-ghost" onClick={useMyLocation}>?�� ?�재 ?�치�?채우�?/button>        <div className="flex justify-end gap-3">          <button type="button" onClick={()=>nav(-1)} className="btn-ghost">취소</button>          <button type="submit" className="btn-primary" disabled={loading}>            {loading ? "?�??�?.." : "만들�?}          </button>        </div>      </div>    </form>  );}
