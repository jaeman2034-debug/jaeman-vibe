import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useRef, useState } from "react";
import { ensureMicPermission, listenOnceP } from "../utils/mic";
export default function MicDebug() { const [support, setSupport] = useState("-"); const [perm, setPerm] = useState("unknown"); const [log, setLog] = useState([]); const [lang, setLang] = useState("ko-KR"); const busyRef = useRef(false); const add = (s) => setLog((prev) => [...prev.slice(-30), `${new Date().toLocaleTimeString()} ${s}`]); useEffect(() => { const SR = window.SpeechRecognition || window.webkitSpeechRecognition; setSupport(SR ? (SR.name || "SpeechRecognition OK") : "NOT SUPPORTED"); navigator.permissions?.query?.({ name: "microphone" }).then((st) => { setPerm(st.state); st.onchange = () => setPerm(st.state); }, () => setPerm("unknown")); }, []); const testPerm = async () => { const ok = await ensureMicPermission(); add(`ensureMicPermission: ${ok}`); }; const testOnce = async () => { if (busyRef.current)
    return; busyRef.current = true; add("listenOnceP start"); try {
    const txt = await listenOnceP(lang, 20000, 10000, 10000);
    add(`RESULT: "${txt}"`);
}
catch (e) {
    add(`ERROR: ${e?.message || e}`);
}
finally {
    busyRef.current = false;
} }; return (_jsxs("div", { style: { maxWidth: 720, margin: "24px auto", fontFamily: "system-ui,Segoe UI,Roboto,Apple SD Gothic Neo,Noto Sans KR,Arial" }, children: ["      ", _jsx("h2", { children: "Mic Debug" }), "      ", _jsxs("div", { children: ["Recognition: ", _jsx("b", { children: support })] }), "      ", _jsxs("div", { children: ["Permission: ", _jsx("b", { children: perm })] }), "      ", _jsxs("div", { style: { marginTop: 8 }, children: ["        ?\uFFFD\uC5B4:        ", _jsxs("select", { value: lang, onChange: (e) => setLang(e.target.value), style: { marginLeft: 8 }, children: ["          ", _jsx("option", { value: "ko-KR", children: "ko-KR" }), "          ", _jsx("option", { value: "en-US", children: "en-US" }), "          ", _jsx("option", { value: "ja-JP", children: "ja-JP" }), "          ", _jsx("option", { value: "zh-CN", children: "zh-CN" }), "        "] }), "      "] }), "      ", _jsxs("div", { style: { display: "flex", gap: 8, marginTop: 12 }, children: ["        ", _jsx("button", { onClick: testPerm, children: "\uAD8C\uD55C ?\uFFFD\uC778" }), "        ", _jsx("button", { onClick: testOnce, children: "??\uFFFD??\uFFFD\uAE30" }), "      "] }), "      ", _jsxs("pre", { style: { background: "#0b1020", color: "#cfe4ff", padding: 12, borderRadius: 8, marginTop: 16, height: 280, overflow: "auto" }, children: ["        ", log.join("\n"), "      "] }), "      ", _jsx("p", { style: { color: "#64748b" }, children: "        * \uC8FC\uC18C\uFFFD??\uFFFD\uCABD ?\uFFFD\uFFFD?\uFFFD\uC11C \uB9C8\uC774?\uFFFD\uFFFD? \"?\uFFFD\uC6A9\"?\uFFFD\uB85C ?\uFFFD\uACE0, Windows ?\uFFFD\uB825 ?\uFFFD\uCE58(?\uFFFD\uB9AC ?\uFFFD\uC815)??\uAE30\uBCF8 \uB9C8\uC774?\uFFFD\uFFFD? ?\uFFFD\uBC14\uB978\uFFFD? ?\uFFFD\uC778?\uFFFD\uC138??      " }), "    "] })); }
