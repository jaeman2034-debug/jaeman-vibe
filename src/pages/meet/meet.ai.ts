import type { PageAIPlugin, PageAIHandler, PageAIContext } from "@/voice/pageAI/types";const examples = [  "?¤ëŠ˜ ?´í›„ ?¼ì •ë§?,  "?œìš¸ ëª¨ìž„ ë³´ì—¬ì¤?,  "ëª¨ì§‘ì¤‘ë§Œ",  "ì²«ë²ˆì§?ëª¨ìž„ ?´ì–´",];export function makeMeetPlugin(): (ctx: PageAIContext) => PageAIPlugin {  const handle: PageAIHandler = async (input, ctx) => {    const u = new URL(location.href);    if (/?¤ëŠ˜?´í›„|?¤ê??¤ëŠ”|?¤ê????´ë²ˆì£??´ë²ˆ\s?ì£?.test(input)) {      u.searchParams.set("date", "upcoming");      ctx.navigate(`/meet${u.search}`);      return true;    }    const mLoc = input.match(/(.+?)\s?(ëª¨ìž„)?\s?ë³´ì—¬/);    if (mLoc) {      const loc = mLoc[1].trim();      u.searchParams.set("loc", loc);      ctx.navigate(`/meet${u.search}`);      return true;    }    if (/ëª¨ì§‘ì¤?.test(input)) {      u.searchParams.set("status", "open");      ctx.navigate(`/meet${u.search}`);      return true;    }    if (/ì²?????[1-3]ë²ˆì§¸?\s?ëª¨ìž„|?´ì–´/.test(input)) {      const n = /??.test(input) ? 2 : /??.test(input) ? 3 : 1;      ctx.navigate(`/meet/item-${n}`);      return true;    }    return false;  };  return (ctx) => ({ id: "meet.core", pageId: "meet", handle, examples });} 
