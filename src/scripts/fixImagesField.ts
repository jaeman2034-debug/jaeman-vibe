import { collection, getDocs, updateDoc, doc } from "firebase/firestore";import { db } from "@/lib/firebase";/** * ?�시 ?�크립트: market�?products 컬렉?�의 images ?�드 구조 ?�리 *  * ?�용�? * 1. ???�일??브라?��? 콘솔?�서 ?�행 * 2. ?�는 개발 중에 ?�시�??�이지???�함 *  * 주의: ?�로?�션?�서???�용?��? 마세?? */// 기존 ?�수 (?�세??로깅 ?�함)export async function fixImagesField() {  try {    console.log("?�� images ?�드 구조 ?�리 ?�작...");        let totalFixed = 0;        // 1. market 컬렉???�리    console.log("?�� market 컬렉???�리 �?..");    const marketSnap = await getDocs(collection(db, "market"));    let marketFixed = 0;        for (const d of marketSnap.docs) {      const data = d.data() as any;            // images가 객체(map)??경우�??�정      if (data.images && !Array.isArray(data.images)) {        console.log(`?�� market 문서 ${d.id} ?�정:`, data.images);                // images ?�에 ?�어가 ?�던 ?�못???�드?�을 ?�위�??�리�? images??�?배열�?초기??        const { images, ...rest } = data;        const correctedData = { ...images, ...rest, images: [] };                await updateDoc(doc(db, "market", d.id), correctedData);                marketFixed++;      }    }        console.log(`??market 컬렉???�리 ?�료! ${marketFixed}�?문서 ?�정??);        // 2. products 컬렉???�리    console.log("?�� products 컬렉???�리 �?..");    const productsSnap = await getDocs(collection(db, "products"));    let productsFixed = 0;        for (const d of productsSnap.docs) {      const data = d.data() as any;            // images가 객체(map)??경우�??�정      if (data.images && !Array.isArray(data.images)) {        console.log(`?�� products 문서 ${d.id} ?�정:`, data.images);                // images ?�에 ?�어가 ?�던 ?�못???�드?�을 ?�위�??�리�? images??�?배열�?초기??        const { images, ...rest } = data;        const correctedData = { ...images, ...rest, images: [] };                await updateDoc(doc(db, "products", d.id), correctedData);                productsFixed++;      }    }        console.log(`??products 컬렉???�리 ?�료! ${productsFixed}�?문서 ?�정??);        totalFixed = marketFixed + productsFixed;    console.log(`?�� ?�체 ?�리 ?�료! �?${totalFixed}�?문서 ?�정??);    alert(`images ?�드 구조 ?�리 ?�료!\n\nmarket: ${marketFixed}�?nproducts: ${productsFixed}�?n�?${totalFixed}�?문서가 ?�정?�었?�니??`);        return totalFixed;  } catch (error) {    console.error("???�리 �??�류 발생:", error);    alert("?�리 �??�류가 발생?�습?�다: " + error);    throw error;  }}// 강력???�괄 ?�정 ?�수 (???�율??export async function fixImagesFieldForce() {  try {    console.log("?? 강력??images ?�드 구조 ?�리 ?�작...");        let totalChanged = 0;        // 1. market 컬렉???�리    console.log("?�� market 컬렉???�리 �?..");    const marketSnap = await getDocs(collection(db, "market"));    let marketChanged = 0;        for (const d of marketSnap.docs) {      const data = d.data();      // images가 배열???�니�?객체(map)??경우�??�정      if (data.images && !Array.isArray(data.images) && typeof data.images === "object") {        const { images, ...rest } = data;        await updateDoc(doc(db, "market", d.id), {          ...images,          // lat/lng/price/title ?�을 ?�위�??�격          ...rest,          images: Array.isArray(images) ? images : [], // URL 배열(지금�? 비어?�을 ???�음)        });        marketChanged++;        console.log(`??market 문서 ${d.id} ?�정??);      }    }        console.log(`??market 컬렉???�리 ?�료! ${marketChanged}�?문서 ?�정??);        // 2. products 컬렉???�리    console.log("?�� products 컬렉???�리 �?..");    const productsSnap = await getDocs(collection(db, "products"));    let productsChanged = 0;        for (const d of productsSnap.docs) {      const data = d.data();      // images가 배열???�니�?객체(map)??경우�??�정      if (data.images && !Array.isArray(data.images) && typeof data.images === "object") {        const { images, ...rest } = data;        await updateDoc(doc(db, "products", d.id), {          ...images,          // lat/lng/price/title ?�을 ?�위�??�격          ...rest,          images: Array.isArray(images) ? images : [], // URL 배열(지금�? 비어?�을 ???�음)        });        productsChanged++;        console.log(`??products 문서 ${d.id} ?�정??);      }    }        console.log(`??products 컬렉???�리 ?�료! ${productsChanged}�?문서 ?�정??);        totalChanged = marketChanged + productsChanged;    console.log(`?�� 강력???�리 ?�료! �?${totalChanged}�?문서 ?�정??);    alert(`images ?�드 구조 ?�리 ?�료!\n\nmarket: ${marketChanged}�?nproducts: ${productsChanged}�?n�?${totalChanged}�?문서가 ?�정?�었?�니??`);        return totalChanged;  } catch (error) {    console.error("??강력???�리 �??�류 발생:", error);    alert("강력???�리 �??�류가 발생?�습?�다: " + error);    throw error;  }}// 브라?��? 콘솔?�서 직접 ?�행?????�도�??�역 ?�수�??�록if (typeof window !== 'undefined') {  (window as any).fixImagesField = fixImagesField;  (window as any).fixImagesFieldForce = fixImagesFieldForce;  console.log("?�� fixImagesField() ?�수가 ?�역???�록?�었?�니??");  console.log("?? fixImagesFieldForce() ?�수가 ?�역???�록?�었?�니??");  console.log("브라?��? 콘솔?�서 fixImagesField() ?�는 fixImagesFieldForce()�??�행?�세??");}