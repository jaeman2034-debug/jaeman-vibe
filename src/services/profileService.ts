import { doc, getDoc, setDoc, serverTimestamp, updateDoc } from 'firebase/firestore';import { auth, db } from '@/lib/firebase';export interface Profile {  uid: string;  nickname?: string;  photoURL?: string;  stats: {    trades: number;    starsSum: number;    pos: number;    neg: number;  };  blocked?: { [uid: string]: boolean };  createdAt?: any;  updatedAt?: any;}// ?ÑÎ°ú???ùÏÑ± ?êÎäî ?ÖÎç∞?¥Ìä∏export async function createOrUpdateProfile(profileData: Partial<Profile>): Promise<void> {  const user = auth.currentUser;  if (!user) throw new Error('Î°úÍ∑∏?∏Ïù¥ ?ÑÏöî?©Îãà??');  try {    const profileRef = doc(db, 'profiles', user.uid);    const profileSnap = await getDoc(profileRef);    if (profileSnap.exists()) {      // Í∏∞Ï°¥ ?ÑÎ°ú???ÖÎç∞?¥Ìä∏      await updateDoc(profileRef, {        ...profileData,        updatedAt: serverTimestamp()      });    } else {      // ???ÑÎ°ú???ùÏÑ±      await setDoc(profileRef, {        uid: user.uid,        nickname: profileData.nickname || `?¨Ïö©??{user.uid.slice(-4)}`,        photoURL: profileData.photoURL,        stats: {          trades: 0,          starsSum: 0,          pos: 0,          neg: 0        },        blocked: {},        createdAt: serverTimestamp(),        updatedAt: serverTimestamp()      });    }  } catch (error) {    console.error('?ÑÎ°ú???ùÏÑ±/?ÖÎç∞?¥Ìä∏ ?§Ìå®:', error);    throw error;  }}// ?ÑÎ°ú??Ï°∞Ìöåexport async function getProfile(uid: string): Promise<Profile | null> {  try {    const profileDoc = await getDoc(doc(db, 'profiles', uid));    if (!profileDoc.exists()) return null;    return {      uid: profileDoc.id,      ...profileDoc.data()    } as Profile;  } catch (error) {    console.error('?ÑÎ°ú??Ï°∞Ìöå ?§Ìå®:', error);    return null;  }}// ?¨Ïö©??Ï∞®Îã®/Ï∞®Îã® ?¥Ï†úexport async function toggleBlockUser(targetUid: string, block: boolean): Promise<void> {  const user = auth.currentUser;  if (!user) throw new Error('Î°úÍ∑∏?∏Ïù¥ ?ÑÏöî?©Îãà??');  try {    const profileRef = doc(db, 'profiles', user.uid);    const profileSnap = await getDoc(profileRef);    if (profileSnap.exists()) {      const currentBlocked = profileSnap.data().blocked || {};            if (block) {        currentBlocked[targetUid] = true;      } else {        delete currentBlocked[targetUid];      }      await updateDoc(profileRef, {        blocked: currentBlocked,        updatedAt: serverTimestamp()      });    }  } catch (error) {    console.error('?¨Ïö©??Ï∞®Îã®/?¥Ï†ú ?§Ìå®:', error);    throw error;  }}// ???ÑÎ°ú??Ï°∞Ìöåexport async function getMyProfile(): Promise<Profile | null> {  const user = auth.currentUser;  if (!user) return null;    return getProfile(user.uid);}