"use strict";
// Marketplace Types and Interfaces// Product Statusexport type ProductStatus = '?�매�? | '?�약�? | '?�료';// Product Data Structureexport interface Product {  id: string;  sellerId: string;           // ?�매??UID (?�수)  title: string;              // ?�품�?(?�수)  price: number;              // 가�?(?�수)  status: ProductStatus;      // ?�태 (?�수)    // Optional fields  desc?: string;              // ?�품 ?�명  category?: string;          // 카테고리  images?: string[];          // ?��?지 URL 배열  location?: string;          // ?�치�?  lat?: number;               // ?�도  lng?: number;               // 경도    // Metadata  createdAt: any;             // ?�성??(serverTimestamp)  updatedAt: any;             // ?�정??(serverTimestamp)  views?: number;             // 조회??  likes?: number;             // 좋아????    // AI Analysis (optional)  analysis?: AIAnalysisResult;  analyzedAt?: Date;}// AI Analysis Resultexport interface AIAnalysisResult {  category: string;  condition: 'new' | 'good' | 'fair' | 'poor';  priceEstimate: {     low: number;     high: number;     currency: 'KRW'   };  authenticityScore: number;  riskFlags: string[];  tags: string[];}// Chat Thread Statusexport type ThreadStatus = 'negotiating' | 'booked' | 'done';// Chat Thread Structureexport interface ChatThread {  id: string;  members: [string, string];  // [buyerUid, sellerUid]  productId: string;          // ?�품 ID  status: ThreadStatus;       // 채팅 ?�태  lastMessage: string;        // 마�?�?메시지  lastMessageAt: any;         // 마�?�?메시지 ?�간 (serverTimestamp)  createdAt: any;             // ?�성??(serverTimestamp)    // Optional fields  productTitle?: string;      // ?�품�?(채팅 목록 ?�시??  productImage?: string;      // ?�품 ?��?지 (채팅 목록 ?�시??  productPrice?: number;      // ?�품 가�?(채팅 목록 ?�시??}// Message Structureexport interface ChatMessage {  id: string;  threadId: string;           // 채팅�?ID  senderId: string;           // 발신??UID  text: string;               // 메시지 ?�용 (content ??text�?변�?  type: 'text' | 'image' | 'offer'; // 메시지 ?�??  createdAt: any;             // 발송?�간 (serverTimestamp)    // Optional fields for different message types  imageUrl?: string;          // ?��?지 메시지??경우  offerAmount?: number;       // 가�??�안??경우  offerStatus?: 'pending' | 'accepted' | 'rejected'; // ?�안 ?�태}// Product Creation Payloadexport interface CreateProductPayload {  title: string;  price: number;  category: string;  desc: string;  location?: string;  lat?: number;  lng?: number;  images: File[];}// Product Update Payloadexport interface UpdateProductPayload {  title?: string;  price?: number;  category?: string;  desc?: string;  status?: ProductStatus;  location?: string;  lat?: number;  lng?: number;  images?: string[];}// Chat Creation Payloadexport interface CreateChatPayload {  productId: string;  buyerUid: string;  sellerUid: string;  initialMessage?: string;}// Message Creation Payloadexport interface CreateMessagePayload {  threadId: string;  text: string;               // content ??text�?변�?  type: 'text' | 'image' | 'offer';  imageUrl?: string;  offerAmount?: number;}// Deal Typesexport type DealMode = 'meet' | 'delivery';export type DealStatus = 'proposed' | 'accepted' | 'rejected' | 'cancelled' | 'completed';// Deal Structureexport interface Deal {  id: string;  mode: DealMode;                    // 거래 방식: 직거???�는 ?�배  price: number;                     // 거래 가�?  place?: string;                    // 만남 ?�소 (직거????  meetAt?: any;                      // 만남 ?�간 (직거????  status: DealStatus;                // 거래 ?�태  proposedBy: string;                // ?�안??UID  acceptedBy?: string;               // ?�락??UID (?�락 ??  createdAt: any;                    // ?�성 ?�간  updatedAt: any;                    // ?�정 ?�간  notes?: string;                    // 추�? 메모}// Deal Creation Payloadexport interface CreateDealPayload {  mode: DealMode;  price: number;  place?: string;  meetAt?: Date;  notes?: string;}// Deal Update Payloadexport interface UpdateDealPayload {  status?: DealStatus;  acceptedBy?: string;  notes?: string;}// Blocking & Reporting System Typesexport interface Report {  id: string;  reporterId: string;        // ?�고??UID  targetId: string;          // ?�고 ?�??UID  reason: ReportReason;      // ?�고 ?�유  context: string;           // ?�고 ?�세 ?�용  threadId?: string;         // 관??채팅�?ID (?�택?�항)  productId?: string;        // 관???�품 ID (?�택?�항)  createdAt: any;            // ?�고 ?�간  status?: 'pending' | 'reviewed' | 'resolved'; // ?�고 처리 ?�태}export type ReportReason =   | 'spam'           // ?�팸/광고  | 'inappropriate'  // 부?�절???�용  | 'harassment'     // 괴롭???�박  | 'fraud'          // ?�기/?�위 ?�보  | 'fake_product'   // 가�??�품  | 'other';         // 기�?export interface CreateReportPayload {  targetId: string;  reason: ReportReason;  context: string;  threadId?: string;  productId?: string;}export interface BlockedUser {  targetUid: string;  blockedAt: any;  reason?: string;}// Profile & Reputation System Typesexport interface Profile {  uid: string;  nickname: string;  photoURL?: string;  stats: {    trades: number;        // �?거래 ??    starsSum: number;      // 별점 총합    pos: number;           // 긍정???�기 ??    neg: number;           // 부?�적 ?�기 ??  };  blocked?: { [otherUid: string]: boolean }; // 차단???�용?�들  createdAt?: any;  updatedAt?: any;}export interface Review {  id: string;  threadId: string;       // 거래가 ?�루?�진 채팅�?ID  writerId: string;       // ?�기�??�성???�용??UID  targetId: string;       // ?�기�?받는 ?�용??UID  stars: number;          // 별점 (1~5)  tags: string[];         // ?�그??(?? "?�간?�속", "친절", "?�품?�질")  comment?: string;       // 추�? 코멘??(?�택?�항)  createdAt: any;         // ?�성 ?�간}export interface CreateReviewPayload {  threadId: string;  targetId: string;  stars: number;  tags: string[];  comment?: string;}export interface ProfileStats {  trades: number;  starsSum: number;  pos: number;  neg: number;  averageStars: number;   // ?�균 별점  reputationScore: number; // ?�판 ?�수 (0~100)}// Market Item Data (for backward compatibility)export interface MarketDGItemData {  id: string;  title: string;  price: number;  category?: string;  desc?: string;  images?: string[];  location?: string;  lat?: number;  lng?: number;  createdAt?: any;  sellerId?: string;  status?: ProductStatus;  views?: number;  likes?: number;  analysis?: AIAnalysisResult;  analyzedAt?: Date;}// Location Dataexport interface LocationData {  lat: number;  lng: number;  placeName?: string;  address?: string;}// Voice Command Typesexport interface VoiceCommand {  transcript: string;  intent: Intent;  confidence?: number;}export type Intent =   | { type: 'OPEN_CREATE' }  | { type: 'FILTER_NEARBY'; km: number }  | { type: 'FILTER_PRICE_MAX'; max: number }  | { type: 'OPEN_DETAIL'; index: number }  | { type: 'ANALYZE_CURRENT' }  | { type: 'NEXT_PAGE' }  | { type: 'PREV_PAGE' }  | { type: 'SEARCH'; query: string }  | { type: 'FILTER_CATEGORY'; category: string }  | { type: 'SORT_BY'; field: 'price' | 'distance' | 'date' }  | { type: 'TOGGLE_FAVORITE'; index: number }  | { type: 'SHOW_FAVORITES' }  | { type: 'CLEAR_FILTERS' }  | { type: 'HELP' }  | { type: 'OPEN_CHAT'; productId: string }  | { type: 'SEND_MESSAGE'; content: string };
