export type VerifyResult = { ok: boolean; score: number };let baselineRms: number | null = null;function rms(buf: Float32Array) {  let s = 0;  for (let i = 0; i < buf.length; i++) s += buf[i] * buf[i];  return Math.sqrt(s / (buf.length || 1));}/** ?§Îîî??Ï≤?Å¨(PCM float) Î∞õÏïÑ Í∞ÑÎã®??Í≤åÏù¥???µÍ≥º/?§Ìå® ?êÎã®(Ï¥àÎ≥¥??Mock) */export async function verifyChunkMock(pcm: Float32Array): Promise<VerifyResult> {  const cur = rms(buf);  if (baselineRms == null) baselineRms = cur;  if (cur < 0.003) return { ok: false, score: 0.1 }; // ?àÎ¨¥ ?ëÏùå(?åÏùå)  if (cur > 0.3) return { ok: false, score: 0.2 }; // ?àÎ¨¥ ???òÍ≤Ω?°Ïùå)  const ratio = cur / (baselineRms || 0.01);  const score = Math.max(0, Math.min(1, 1 - Math.abs(1 - ratio)));  return { ok: score > 0.4, score };}export async function enrollMock() {  baselineRms = null; // ?±Î°ù(Î¶¨ÏÖã). ?§Ï†ú ?úÎ≤Ñ Î≤ÑÏ†Ñ?êÏÑú ?ÑÎ≤†???Ä???àÏ†ï} 
