# YAGO VIBE 리버스 프록시 설정

upstream n8n_backend {
    server n8n:5678;
}

upstream cast_bridge_backend {
    server cast-bridge:4000;
}

upstream firebase_ui_backend {
    server firebase-emulator:4001;
}

# HTTP 서버 (HTTPS 리다이렉트)
server {
    listen 80;
    server_name localhost;
    
    # HTTPS로 리다이렉트
    return 301 https://$server_name$request_uri;
}

# HTTPS 서버
server {
    listen 443 ssl http2;
    server_name localhost;
    
    # SSL 인증서 설정
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 보안 헤더
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # n8n 프록시
    location /n8n/ {
        proxy_pass http://n8n_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 지원
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Cast Bridge 프록시
    location /cast/ {
        proxy_pass http://cast_bridge_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Firebase Emulator UI 프록시
    location /firebase/ {
        proxy_pass http://firebase_ui_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 기본 페이지 (서비스 목록)
    location / {
        return 200 '
        <!DOCTYPE html>
        <html>
        <head>
            <title>🎧 YAGO VIBE 스마트 스피커 스택</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                h1 { color: #2563eb; text-align: center; }
                .service { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
                .service h3 { margin: 0 0 10px 0; color: #374151; }
                .service a { color: #2563eb; text-decoration: none; }
                .service a:hover { text-decoration: underline; }
                .status { color: #10b981; font-weight: bold; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>🎧 YAGO VIBE 스마트 스피커 스택</h1>
                <div class="service">
                    <h3>🔧 n8n 워크플로우 엔진</h3>
                    <p>자동화 워크플로우 및 웹훅 관리</p>
                    <a href="/n8n/" target="_blank">n8n 대시보드 열기</a>
                </div>
                <div class="service">
                    <h3>🎵 Cast Bridge</h3>
                    <p>Google Nest/Home 스피커 캐스트 서버</p>
                    <a href="/cast/status" target="_blank">Cast Bridge 상태 확인</a>
                </div>
                <div class="service">
                    <h3>🔥 Firebase Emulator</h3>
                    <p>로컬 Firestore, Storage, Auth 에뮬레이터</p>
                    <a href="/firebase/" target="_blank">Firebase Emulator UI 열기</a>
                </div>
                <div class="service">
                    <h3>📱 스마트 스피커 테스트</h3>
                    <p>Kakao Mini, Google Home 연동 테스트</p>
                    <span class="status">✅ 모든 서비스 정상 동작 중</span>
                </div>
            </div>
        </body>
        </html>
        ';
        add_header Content-Type text/html;
    }
}
